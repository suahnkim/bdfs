<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="tom.mediabc" />
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	
	
	
	<interceptors>
		<interceptor>
			<mapping path="/service/**"/>
			<mapping path="/original/**"/>
			<!-- <exclude-mapping path="/ccsearch/v1/**"/>-->
			<beans:bean class="tom.mediabc.search.catalog.AuthenticInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	
	
	<!--
		Expression Meaning
		"0 0 12 * * *"	매일 12시에 실행
		"0 15 10 * * *"	매일 10시 15분에 실행
		"0 * 14 * * *"	매일 14시에 시작해서
		"0 0/5 14 * * *"	매일 14시에 시작해서 5분간격으로 실행
		"0 0/5 14,18 * * *"	매일 14시, 18시에 시작해서 5분간격으로 실행
		"0 0-5 14 * * *"	매일 14시에 시작해서 0분동안 실행
		
		fixed-delay - 이전에 실행된 태스크의 종료시간으로 부터 정의된 시간만큼 지난 후 태스크를 실행 (밀리세컨드 단위)
		fixed-rate  - 이전에 실해된 태스크의 시작시간으로 부터 정의된 시간만큼 지난 후 태스크
	-->
	<task:scheduler id="scheduler" pool-size="50"/>
	<task:annotation-driven/>
	<task:scheduled-tasks scheduler="scheduler">
		<task:scheduled ref="CCIndexBatch"         method="indexNewCC"      fixed-delay="10000"/>
		<task:scheduled ref="CCDownloadBatch"      method="downloadNewCC"   fixed-delay="10000"/>
		
	</task:scheduled-tasks>

	
	
	
</beans:beans>